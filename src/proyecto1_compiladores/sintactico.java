
//----------------------------------------------------
// The following code was generated by CUP v0.10k
// Mon Apr 06 01:08:14 CST 2015
//----------------------------------------------------

package proyecto1_compiladores;

import java_cup.runtime.*;
import java.util.ArrayList;
import java.io.PrintWriter;
import static proyecto1_compiladores.Menu.path;
import static proyecto1_compiladores.sintactico.*;

/** CUP v0.10k generated parser.
  * @version Mon Apr 06 01:08:14 CST 2015
  */
public class sintactico extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public sintactico() {super();}

  /** Constructor which sets the default scanner. */
  public sintactico(java_cup.runtime.Scanner s) {super(s);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\151\000\002\002\004\000\002\022\003\000\002\022" +
    "\003\000\002\034\007\000\002\034\004\000\002\034\005" +
    "\000\002\034\006\000\002\034\007\000\002\034\003\000" +
    "\002\007\003\000\002\007\003\000\002\007\003\000\002" +
    "\006\006\000\002\006\004\000\002\006\005\000\002\006" +
    "\006\000\002\013\010\000\002\013\010\000\002\013\004" +
    "\000\002\013\005\000\002\013\006\000\002\013\007\000" +
    "\002\013\007\000\002\013\010\000\002\013\010\000\002" +
    "\012\002\000\002\012\010\000\002\012\010\000\002\017" +
    "\005\000\002\035\005\000\002\014\006\000\002\015\006" +
    "\000\002\015\006\000\002\015\006\000\002\015\006\000" +
    "\002\015\006\000\002\015\006\000\002\015\006\000\002" +
    "\015\004\000\002\015\005\000\002\016\010\000\002\032" +
    "\006\000\002\010\003\000\002\010\003\000\002\010\003" +
    "\000\002\010\003\000\002\010\003\000\002\010\003\000" +
    "\002\010\003\000\002\010\003\000\002\036\002\000\002" +
    "\036\013\000\002\036\014\000\002\036\012\000\002\033" +
    "\002\000\002\033\003\000\002\011\002\000\002\011\004" +
    "\000\002\011\004\000\002\011\004\000\002\003\005\000" +
    "\002\005\006\000\002\004\002\000\002\004\012\000\002" +
    "\004\011\000\002\037\025\000\002\037\004\000\002\037" +
    "\005\000\002\037\006\000\002\037\007\000\002\037\010" +
    "\000\002\037\011\000\002\037\012\000\002\037\013\000" +
    "\002\037\014\000\002\037\015\000\002\037\016\000\002" +
    "\037\017\000\002\037\020\000\002\037\021\000\002\037" +
    "\022\000\002\037\023\000\002\037\024\000\002\040\003" +
    "\000\002\040\003\000\002\040\003\000\002\040\003\000" +
    "\002\023\006\000\002\023\006\000\002\027\005\000\002" +
    "\027\005\000\002\030\005\000\002\030\005\000\002\024" +
    "\005\000\002\024\005\000\002\031\012\000\002\031\015" +
    "\000\002\031\015\000\002\031\020\000\002\031\002\000" +
    "\002\025\006\000\002\025\006\000\002\020\005\000\002" +
    "\021\005\000\002\026\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\371\000\012\003\007\004\005\005\006\046\004\001" +
    "\002\000\006\003\334\047\333\001\002\000\004\046\206" +
    "\001\002\000\012\003\020\007\014\011\022\013\017\001" +
    "\002\000\004\002\ufff9\001\002\000\004\002\uffff\001\002" +
    "\000\004\002\013\001\002\000\004\002\000\001\002\000" +
    "\004\002\001\001\002\000\006\010\uffe8\033\uffe8\001\002" +
    "\000\012\003\166\007\014\011\022\013\017\001\002\000" +
    "\014\003\ufff6\006\ufff6\007\ufff6\011\ufff6\013\ufff6\001\002" +
    "\000\006\014\uffc3\033\uffc3\001\002\000\004\002\ufffd\001" +
    "\002\000\014\003\ufff8\006\ufff8\007\ufff8\011\ufff8\013\ufff8" +
    "\001\002\000\006\012\uffcf\033\uffcf\001\002\000\014\003" +
    "\ufff7\006\ufff7\007\ufff7\011\ufff7\013\ufff7\001\002\000\006" +
    "\012\026\033\025\001\002\000\022\013\017\015\032\016" +
    "\033\017\041\020\027\021\036\042\043\045\031\001\002" +
    "\000\014\003\uffe4\006\uffe4\007\uffe4\011\uffe4\013\uffe4\001" +
    "\002\000\006\003\131\035\132\001\002\000\024\013\uffd3" +
    "\015\uffd3\016\uffd3\017\uffd3\020\uffd3\021\uffd3\034\uffd3\042" +
    "\uffd3\045\uffd3\001\002\000\004\035\126\001\002\000\006" +
    "\003\120\035\121\001\002\000\006\003\101\035\102\001" +
    "\002\000\024\013\uffd5\015\uffd5\016\uffd5\017\uffd5\020\uffd5" +
    "\021\uffd5\034\uffd5\042\uffd5\045\uffd5\001\002\000\024\013" +
    "\uffd6\015\uffd6\016\uffd6\017\uffd6\020\uffd6\021\uffd6\034\uffd6" +
    "\042\uffd6\045\uffd6\001\002\000\004\035\076\001\002\000" +
    "\024\013\uffd7\015\uffd7\016\uffd7\017\uffd7\020\uffd7\021\uffd7" +
    "\034\uffd7\042\uffd7\045\uffd7\001\002\000\024\013\uffd0\015" +
    "\uffd0\016\uffd0\017\uffd0\020\uffd0\021\uffd0\034\uffd0\042\uffd0" +
    "\045\uffd0\001\002\000\004\035\073\001\002\000\024\013" +
    "\uffd1\015\uffd1\016\uffd1\017\uffd1\020\uffd1\021\uffd1\034\uffd1" +
    "\042\uffd1\045\uffd1\001\002\000\004\035\063\001\002\000" +
    "\022\013\017\015\032\016\033\017\041\020\027\021\036" +
    "\042\043\045\031\001\002\000\024\013\uffd2\015\uffd2\016" +
    "\uffd2\017\uffd2\020\uffd2\021\uffd2\034\uffd2\042\uffd2\045\uffd2" +
    "\001\002\000\024\013\uffd4\015\uffd4\016\uffd4\017\uffd4\020" +
    "\uffd4\021\uffd4\034\uffd4\042\uffd4\045\uffd4\001\002\000\022" +
    "\013\017\015\032\016\033\017\041\020\027\021\036\042" +
    "\043\045\031\001\002\000\022\013\017\015\032\016\033" +
    "\017\041\020\027\021\036\042\043\045\031\001\002\000" +
    "\024\013\017\015\032\016\033\017\041\020\027\021\036" +
    "\034\052\042\043\045\031\001\002\000\010\012\uffcb\033" +
    "\uffcb\036\057\001\002\000\024\013\017\015\032\016\033" +
    "\017\041\020\027\021\036\034\054\042\043\045\031\001" +
    "\002\000\010\012\uffcb\033\uffcb\036\057\001\002\000\004" +
    "\034\056\001\002\000\010\012\uffcb\033\uffcb\036\057\001" +
    "\002\000\012\010\uffca\012\uffca\014\uffca\033\uffca\001\002" +
    "\000\006\012\uffcd\033\uffcd\001\002\000\006\012\uffce\033" +
    "\uffce\001\002\000\006\012\uffcc\033\uffcc\001\002\000\004" +
    "\031\064\001\002\000\012\031\uffc9\036\uffc9\037\uffc9\044" +
    "\uffc9\001\002\000\012\031\067\036\070\037\066\044\071" +
    "\001\002\000\012\031\uffc8\036\uffc8\037\uffc8\044\uffc8\001" +
    "\002\000\004\032\072\001\002\000\012\031\uffc6\036\uffc6" +
    "\037\uffc6\044\uffc6\001\002\000\012\031\uffc7\036\uffc7\037" +
    "\uffc7\044\uffc7\001\002\000\024\013\uffd9\015\uffd9\016\uffd9" +
    "\017\uffd9\020\uffd9\021\uffd9\034\uffd9\042\uffd9\045\uffd9\001" +
    "\002\000\004\076\074\001\002\000\004\032\075\001\002" +
    "\000\024\013\uffe3\015\uffe3\016\uffe3\017\uffe3\020\uffe3\021" +
    "\uffe3\034\uffe3\042\uffe3\045\uffe3\001\002\000\004\076\077" +
    "\001\002\000\004\032\100\001\002\000\024\013\uffd8\015" +
    "\uffd8\016\uffd8\017\uffd8\020\uffd8\021\uffd8\034\uffd8\042\uffd8" +
    "\045\uffd8\001\002\000\024\013\uffef\015\uffef\016\uffef\017" +
    "\uffef\020\uffef\021\uffef\034\uffef\042\uffef\045\uffef\001\002" +
    "\000\006\003\104\031\103\001\002\000\010\003\105\040" +
    "\107\041\106\001\002\000\024\013\uffee\015\uffee\016\uffee" +
    "\017\uffee\020\uffee\021\uffee\034\uffee\042\uffee\045\uffee\001" +
    "\002\000\024\013\uffed\015\uffed\016\uffed\017\uffed\020\uffed" +
    "\021\uffed\034\uffed\042\uffed\045\uffed\001\002\000\006\003" +
    "\115\031\114\001\002\000\006\003\111\031\110\001\002" +
    "\000\006\003\112\032\113\001\002\000\024\013\uffec\015" +
    "\uffec\016\uffec\017\uffec\020\uffec\021\uffec\034\uffec\042\uffec" +
    "\045\uffec\001\002\000\024\013\uffea\015\uffea\016\uffea\017" +
    "\uffea\020\uffea\021\uffea\034\uffea\042\uffea\045\uffea\001\002" +
    "\000\024\013\ufff1\015\ufff1\016\ufff1\017\ufff1\020\ufff1\021" +
    "\ufff1\034\ufff1\042\ufff1\045\ufff1\001\002\000\006\003\116" +
    "\032\117\001\002\000\024\013\uffeb\015\uffeb\016\uffeb\017" +
    "\uffeb\020\uffeb\021\uffeb\034\uffeb\042\uffeb\045\uffeb\001\002" +
    "\000\024\013\uffe9\015\uffe9\016\uffe9\017\uffe9\020\uffe9\021" +
    "\uffe9\034\uffe9\042\uffe9\045\uffe9\001\002\000\024\013\ufff0" +
    "\015\ufff0\016\ufff0\017\ufff0\020\ufff0\021\ufff0\034\ufff0\042" +
    "\ufff0\045\ufff0\001\002\000\024\013\ufff4\015\ufff4\016\ufff4" +
    "\017\ufff4\020\ufff4\021\ufff4\034\ufff4\042\ufff4\045\ufff4\001" +
    "\002\000\006\003\123\037\122\001\002\000\006\003\124" +
    "\032\125\001\002\000\024\013\ufff3\015\ufff3\016\ufff3\017" +
    "\ufff3\020\ufff3\021\ufff3\034\ufff3\042\ufff3\045\ufff3\001\002" +
    "\000\024\013\ufff2\015\ufff2\016\ufff2\017\ufff2\020\ufff2\021" +
    "\ufff2\034\ufff2\042\ufff2\045\ufff2\001\002\000\024\013\ufff5" +
    "\015\ufff5\016\ufff5\017\ufff5\020\ufff5\021\ufff5\034\ufff5\042" +
    "\ufff5\045\ufff5\001\002\000\004\076\127\001\002\000\004" +
    "\032\130\001\002\000\024\013\uffc4\015\uffc4\016\uffc4\017" +
    "\uffc4\020\uffc4\021\uffc4\034\uffc4\042\uffc4\045\uffc4\001\002" +
    "\000\024\013\uffdb\015\uffdb\016\uffdb\017\uffdb\020\uffdb\021" +
    "\uffdb\034\uffdb\042\uffdb\045\uffdb\001\002\000\022\003\135" +
    "\022\136\023\140\024\137\025\133\026\141\027\134\030" +
    "\142\001\002\000\004\032\151\001\002\000\004\032\150" +
    "\001\002\000\024\013\uffda\015\uffda\016\uffda\017\uffda\020" +
    "\uffda\021\uffda\034\uffda\042\uffda\045\uffda\001\002\000\004" +
    "\032\147\001\002\000\004\032\146\001\002\000\004\032" +
    "\145\001\002\000\004\032\144\001\002\000\004\032\143" +
    "\001\002\000\024\013\uffe1\015\uffe1\016\uffe1\017\uffe1\020" +
    "\uffe1\021\uffe1\034\uffe1\042\uffe1\045\uffe1\001\002\000\024" +
    "\013\uffdd\015\uffdd\016\uffdd\017\uffdd\020\uffdd\021\uffdd\034" +
    "\uffdd\042\uffdd\045\uffdd\001\002\000\024\013\uffdf\015\uffdf" +
    "\016\uffdf\017\uffdf\020\uffdf\021\uffdf\034\uffdf\042\uffdf\045" +
    "\uffdf\001\002\000\024\013\uffdc\015\uffdc\016\uffdc\017\uffdc" +
    "\020\uffdc\021\uffdc\034\uffdc\042\uffdc\045\uffdc\001\002\000" +
    "\024\013\uffe0\015\uffe0\016\uffe0\017\uffe0\020\uffe0\021\uffe0" +
    "\034\uffe0\042\uffe0\045\uffe0\001\002\000\024\013\uffe2\015" +
    "\uffe2\016\uffe2\017\uffe2\020\uffe2\021\uffe2\034\uffe2\042\uffe2" +
    "\045\uffe2\001\002\000\024\013\uffde\015\uffde\016\uffde\017" +
    "\uffde\020\uffde\021\uffde\034\uffde\042\uffde\045\uffde\001\002" +
    "\000\006\014\153\033\154\001\002\000\034\003\uffc5\006" +
    "\uffc5\007\uffc5\011\uffc5\013\uffc5\015\uffc5\016\uffc5\017\uffc5" +
    "\020\uffc5\021\uffc5\034\uffc5\042\uffc5\045\uffc5\001\002\000" +
    "\022\013\017\015\032\016\033\017\041\020\027\021\036" +
    "\042\043\045\031\001\002\000\022\013\017\015\032\016" +
    "\033\017\041\020\027\021\036\042\043\045\031\001\002" +
    "\000\022\013\017\015\032\016\033\017\041\020\027\021" +
    "\036\042\043\045\031\001\002\000\024\013\017\015\032" +
    "\016\033\017\041\020\027\021\036\034\160\042\043\045" +
    "\031\001\002\000\010\014\uffcb\033\uffcb\036\057\001\002" +
    "\000\004\034\162\001\002\000\010\014\uffcb\033\uffcb\036" +
    "\057\001\002\000\006\014\uffc2\033\uffc2\001\002\000\006" +
    "\014\uffc1\033\uffc1\001\002\000\012\003\170\007\014\011" +
    "\022\013\017\001\002\000\004\002\ufffc\001\002\000\006" +
    "\003\172\006\171\001\002\000\004\002\ufffb\001\002\000" +
    "\004\002\ufffe\001\002\000\004\002\ufffa\001\002\000\006" +
    "\010\174\033\175\001\002\000\014\003\uffe5\006\uffe5\007" +
    "\uffe5\011\uffe5\013\uffe5\001\002\000\006\015\032\016\033" +
    "\001\002\000\004\015\032\001\002\000\004\016\033\001" +
    "\002\000\004\034\201\001\002\000\010\010\uffcb\033\uffcb" +
    "\036\057\001\002\000\006\010\uffe7\033\uffe7\001\002\000" +
    "\004\034\204\001\002\000\010\010\uffcb\033\uffcb\036\057" +
    "\001\002\000\006\010\uffe6\033\uffe6\001\002\000\004\047" +
    "\207\001\002\000\004\035\210\001\002\000\004\037\211" +
    "\001\002\000\004\032\212\001\002\000\004\050\213\001" +
    "\002\000\004\035\214\001\002\000\004\076\215\001\002" +
    "\000\004\032\216\001\002\000\004\051\217\001\002\000" +
    "\004\035\220\001\002\000\004\076\221\001\002\000\004" +
    "\053\222\001\002\000\012\052\225\061\224\063\227\071" +
    "\223\001\002\000\006\037\250\072\uff9e\001\002\000\010" +
    "\003\uff9e\037\250\062\uff9e\001\002\000\006\055\311\057" +
    "\313\001\002\000\016\003\uffab\052\uffab\061\uffab\063\uffab" +
    "\071\uffab\073\uffab\001\002\000\006\065\241\067\240\001" +
    "\002\000\016\003\uffad\052\uffad\061\uffad\063\uffad\071\uffad" +
    "\073\uffad\001\002\000\012\052\225\061\224\063\227\071" +
    "\223\001\002\000\016\003\uffae\052\uffae\061\uffae\063\uffae" +
    "\071\uffae\073\uffae\001\002\000\016\003\uffac\052\uffac\061" +
    "\uffac\063\uffac\071\uffac\073\uffac\001\002\000\012\052\225" +
    "\061\224\063\227\071\223\001\002\000\012\052\225\061" +
    "\224\063\227\071\223\001\002\000\004\073\237\001\002" +
    "\000\004\002\uffc0\001\002\000\006\037\250\070\uff9e\001" +
    "\002\000\006\037\250\066\uff9e\001\002\000\004\065\241" +
    "\001\002\000\004\067\240\001\002\000\004\064\245\001" +
    "\002\000\016\003\uff9c\052\uff9c\061\uff9c\063\uff9c\071\uff9c" +
    "\073\uff9c\001\002\000\004\064\247\001\002\000\016\003" +
    "\uff9d\052\uff9d\061\uff9d\063\uff9d\071\uff9d\073\uff9d\001\002" +
    "\000\004\074\253\001\002\000\004\066\252\001\002\000" +
    "\006\064\uff9a\067\uff9a\001\002\000\004\076\254\001\002" +
    "\000\006\036\255\044\256\001\002\000\004\076\274\001" +
    "\002\000\004\044\257\001\002\000\004\076\260\001\002" +
    "\000\004\036\261\001\002\000\004\076\262\001\002\000" +
    "\006\044\263\075\264\001\002\000\004\044\267\001\002" +
    "\000\004\032\265\001\002\000\022\003\uff9e\037\250\056" +
    "\uff9e\060\uff9e\062\uff9e\066\uff9e\070\uff9e\072\uff9e\001\002" +
    "\000\020\003\uffa1\056\uffa1\060\uffa1\062\uffa1\066\uffa1\070" +
    "\uffa1\072\uffa1\001\002\000\004\076\270\001\002\000\004" +
    "\075\271\001\002\000\004\032\272\001\002\000\022\003" +
    "\uff9e\037\250\056\uff9e\060\uff9e\062\uff9e\066\uff9e\070\uff9e" +
    "\072\uff9e\001\002\000\020\003\uff9f\056\uff9f\060\uff9f\062" +
    "\uff9f\066\uff9f\070\uff9f\072\uff9f\001\002\000\006\044\275" +
    "\075\276\001\002\000\004\044\301\001\002\000\004\032" +
    "\277\001\002\000\022\003\uff9e\037\250\056\uff9e\060\uff9e" +
    "\062\uff9e\066\uff9e\070\uff9e\072\uff9e\001\002\000\020\003" +
    "\uffa2\056\uffa2\060\uffa2\062\uffa2\066\uffa2\070\uffa2\072\uffa2" +
    "\001\002\000\004\076\302\001\002\000\004\075\303\001" +
    "\002\000\004\032\304\001\002\000\022\003\uff9e\037\250" +
    "\056\uff9e\060\uff9e\062\uff9e\066\uff9e\070\uff9e\072\uff9e\001" +
    "\002\000\020\003\uffa0\056\uffa0\060\uffa0\062\uffa0\066\uffa0" +
    "\070\uffa0\072\uffa0\001\002\000\004\070\307\001\002\000" +
    "\006\064\uff9b\065\uff9b\001\002\000\004\057\313\001\002" +
    "\000\010\003\uff9e\037\250\056\uff9e\001\002\000\004\055" +
    "\311\001\002\000\010\003\uff9e\037\250\060\uff9e\001\002" +
    "\000\006\003\315\060\316\001\002\000\006\054\uffa5\055" +
    "\uffa5\001\002\000\006\054\uffa6\055\uffa6\001\002\000\004" +
    "\054\320\001\002\000\016\003\uffa9\052\uffa9\061\uffa9\063" +
    "\uffa9\071\uffa9\073\uffa9\001\002\000\006\003\323\056\322" +
    "\001\002\000\006\054\uffa8\057\uffa8\001\002\000\006\054" +
    "\uffa7\057\uffa7\001\002\000\004\054\325\001\002\000\016" +
    "\003\uffaa\052\uffaa\061\uffaa\063\uffaa\071\uffaa\073\uffaa\001" +
    "\002\000\006\003\330\062\327\001\002\000\016\003\uffa4" +
    "\052\uffa4\061\uffa4\063\uffa4\071\uffa4\073\uffa4\001\002\000" +
    "\016\003\uffa3\052\uffa3\061\uffa3\063\uffa3\071\uffa3\073\uffa3" +
    "\001\002\000\004\072\332\001\002\000\016\003\uff99\052" +
    "\uff99\061\uff99\063\uff99\071\uff99\073\uff99\001\002\000\006" +
    "\003\335\035\336\001\002\000\004\002\uffbf\001\002\000" +
    "\004\002\uffbe\001\002\000\006\003\340\037\337\001\002" +
    "\000\006\003\341\032\342\001\002\000\004\002\uffbd\001" +
    "\002\000\004\002\uffbc\001\002\000\006\003\344\050\343" +
    "\001\002\000\006\003\345\035\346\001\002\000\004\002" +
    "\uffbb\001\002\000\004\002\uffba\001\002\000\006\003\350" +
    "\076\347\001\002\000\006\003\351\032\352\001\002\000" +
    "\004\002\uffb9\001\002\000\004\002\uffb8\001\002\000\006" +
    "\003\353\051\354\001\002\000\004\002\uffb7\001\002\000" +
    "\006\003\355\035\356\001\002\000\004\002\uffb6\001\002" +
    "\000\006\003\360\076\357\001\002\000\006\003\361\053" +
    "\362\001\002\000\004\002\uffb5\001\002\000\004\002\uffb4" +
    "\001\002\000\014\003\364\052\225\061\224\063\227\071" +
    "\223\001\002\000\014\003\365\052\225\061\224\063\227" +
    "\071\223\001\002\000\004\002\uffb3\001\002\000\004\002" +
    "\uffb2\001\002\000\014\003\370\052\225\061\224\063\227" +
    "\071\223\001\002\000\014\003\372\052\225\061\224\063" +
    "\227\071\223\001\002\000\004\002\uffb1\001\002\000\004" +
    "\003\373\001\002\000\004\002\uffb0\001\002\000\004\002" +
    "\uffaf\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\371\000\010\022\010\034\011\037\007\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\003\015\007\014" +
    "\017\020\035\022\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\172\001\001\000\012\003\015\007\164\017" +
    "\020\035\022\001\001\000\002\001\001\000\004\004\151" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\036" +
    "\023\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\003\041\005\037\006\034\010\043\013\033\014\036\015" +
    "\045\016\027\032\044\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\003\041\005\037\006\034\010\046\013\033\014\036\015" +
    "\045\016\027\032\044\001\001\000\002\001\001\000\002" +
    "\001\001\000\024\003\041\005\037\006\034\010\047\013" +
    "\033\014\036\015\045\016\027\032\044\001\001\000\024" +
    "\003\041\005\037\006\034\010\050\013\033\014\036\015" +
    "\045\016\027\032\044\001\001\000\024\003\041\005\037" +
    "\006\034\010\052\013\033\014\036\015\045\016\027\032" +
    "\044\001\001\000\004\033\061\001\001\000\024\003\041" +
    "\005\037\006\034\010\054\013\033\014\036\015\045\016" +
    "\027\032\044\001\001\000\004\033\060\001\001\000\002" +
    "\001\001\000\004\033\057\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\011\064\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\024\003\041\005\037" +
    "\006\034\010\154\013\033\014\036\015\045\016\027\032" +
    "\044\001\001\000\024\003\041\005\037\006\034\010\155" +
    "\013\033\014\036\015\045\016\027\032\044\001\001\000" +
    "\024\003\041\005\037\006\034\010\156\013\033\014\036" +
    "\015\045\016\027\032\044\001\001\000\024\003\041\005" +
    "\037\006\034\010\160\013\033\014\036\015\045\016\027" +
    "\032\044\001\001\000\004\033\163\001\001\000\002\001" +
    "\001\000\004\033\162\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\003\015\007\166\017\020\035\022\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\006\176\013\175\001\001\000\004" +
    "\006\202\001\001\000\004\013\177\001\001\000\002\001" +
    "\001\000\004\033\201\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\033\204\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\023\231\024" +
    "\227\025\232\026\225\040\230\001\001\000\004\031\330" +
    "\001\001\000\004\031\325\001\001\000\006\027\307\030" +
    "\311\001\001\000\002\001\001\000\006\020\241\021\242" +
    "\001\001\000\002\001\001\000\014\023\231\024\227\025" +
    "\232\026\225\040\233\001\001\000\002\001\001\000\002" +
    "\001\001\000\014\023\231\024\227\025\232\026\225\040" +
    "\234\001\001\000\014\023\231\024\227\025\232\026\225" +
    "\040\235\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\031\305\001\001\000\004\031\250\001\001\000\004" +
    "\021\245\001\001\000\004\020\243\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\031\265\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\031\272" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\031\277\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\031\304\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\030\323\001\001\000" +
    "\004\031\320\001\001\000\004\027\316\001\001\000\004" +
    "\031\313\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\023\231\024\227\025\232\026\225\040\362\001" +
    "\001\000\014\023\231\024\227\025\232\026\225\040\365" +
    "\001\001\000\002\001\001\000\002\001\001\000\014\023" +
    "\231\024\227\025\232\026\225\040\366\001\001\000\014" +
    "\023\231\024\227\025\232\026\225\040\370\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$sintactico$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$sintactico$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$sintactico$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    
	public static void main(String args[]) throws Exception{
		//new sintactico(new Scanner(new FileInputStream(args[0]))).parse();
		//new sintactico(new Scanner(System.in)).parse();
		new sintactico(new Scanner(new java.io.FileReader(path))).parse();
	}
	
	public static String ConvertirObjectToString(Object Obj) {
	String Str="";
	if(Obj!=null){
	Str = Obj.toString();
	}
	return Str;
	}
	
	public static double ConvertirObjectToDouble(Object Obj) {
	String Str = Obj.toString();
	double NumDouble = Double.valueOf(Str).doubleValue();
	return NumDouble;
	}
	
	public static int ConvertirObjectToInt(Object Obj) {
	int NumInt = Integer.parseInt(sintactico.ConvertirObjectToString(Obj));
	return NumInt;
	}
	
        ArrayList<ListaVariables> lista=new ArrayList();
		ArrayList<Integer> textoColor=new ArrayList();
		public static String color="";
		public static ArrayList<Errores> listaSintactico=new ArrayList();
		public static String textoConsola1="";
		public static String temporal="";
	
        public void syntax_error(Symbol s){
		report_error("Error de sintaxis. Linea: " + (s.right + 1) +
		" Columna: " + s.left + ". Texto: \"" + s.value + "\"", null);
		Errores errorSintaxis=new Errores();
		errorSintaxis.setTipo("Sintactico");
		errorSintaxis.setLinea(s.right+1);
		errorSintaxis.setColumna(s.left);
		errorSintaxis.setDescripcion(ConvertirObjectToString(s.value));
		sintactico.listaSintactico.add(errorSintaxis);
		Proyecto1_Compiladores.listaSintactico.add(errorSintaxis);
		Menu.listaSintactico.add(errorSintaxis);
		
	}
	public static String nombreObjeto="";
	public static String direccionObjeto="";
	public static Double vidaObjeto=0.00;
	public static String tipoObjeto="";
	public static String descripcionObjeto="";
	public static Double destruccionObjeto=0.00;
	public static Double creditoObjeto=0.00;
	public static int tipo=0;
	public static String [][] tablero = new String[100][100];
	public static String [][] auxiliar;

}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$sintactico$actions {
  private final sintactico parser;

  /** Constructor */
  CUP$sintactico$actions(sintactico parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$sintactico$do_action(
    int                        CUP$sintactico$act_num,
    java_cup.runtime.lr_parser CUP$sintactico$parser,
    java.util.Stack            CUP$sintactico$stack,
    int                        CUP$sintactico$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$sintactico$result;

      /* select the action based on the action number */
      switch (CUP$sintactico$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // EXPR_META2 ::= AMeta2 EXPR_BLOQUE CMeta2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(20/*EXPR_META2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // EXPR_ARMAS ::= AArmas2 EXPR_BLOQUE CArmas2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(15/*EXPR_ARMAS*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // EXPR_BONUS ::= ABonus2 EXPR_BLOQUE CBonus2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(14/*EXPR_BONUS*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // EXPR_EXTRAS2 ::= AExtras2 EXPR_ARMAS EXPR_BONUS CExtras2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(19/*EXPR_EXTRAS2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // EXPR_EXTRAS2 ::= AExtras2 EXPR_BONUS EXPR_ARMAS CExtras2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(19/*EXPR_EXTRAS2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // EXPR_BLOQUE ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(23/*EXPR_BLOQUE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // EXPR_BLOQUE ::= ID AParentesis NUMERO Punto Punto NUMERO Coma NUMERO Punto Punto NUMERO CParentesis PuntoComa EXPR_BLOQUE 
            {
              Object RESULT = null;
		int bloqueleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-13)).left;
		int bloqueright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-13)).right;
		String bloque = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-13)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-11)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-11)).right;
		Double x = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-11)).value;
		int wleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).left;
		int wright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).right;
		Double w = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).right;
		Double y = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).right;
		Double z = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).value;
		 
				for(int n=(y.intValue());n<(z.intValue());n++){
                     for(int m=(x.intValue());m<(w.intValue());m++){
                         if(Menu.tablero[m][n]==null){
							 Menu.tablero[(x.intValue())][m]=bloque;
							 System.out.println(bloque +" en ("+x+","+y+")");
                     }else{
				Errores errorLexico=new Errores();
				errorLexico.setTipo("Semantico");
				errorLexico.setLinea(bloqueleft);
				errorLexico.setColumna(bloqueright);
				errorLexico.setDescripcion("Casilla ocupada: No se puede colocar a " +bloque);
				Menu.listaLexico.add(errorLexico);
				Proyecto1_Compiladores.listaLexico.add(errorLexico);
				Menu.listaLexico=Proyecto1_Compiladores.listaLexico;}
                    }
                 }
				 Menu.tablero=sintactico.tablero;
              CUP$sintactico$result = new java_cup.runtime.Symbol(23/*EXPR_BLOQUE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-13)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // EXPR_BLOQUE ::= ID AParentesis NUMERO Coma NUMERO Punto Punto NUMERO CParentesis PuntoComa EXPR_BLOQUE 
            {
              Object RESULT = null;
		int bloqueleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left;
		int bloqueright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).right;
		String bloque = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).right;
		Double x = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).right;
		Double y = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).right;
		Double z = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).value;
		 
				for(int m=(y.intValue());m<(z.intValue());m++){
                     if(sintactico.tablero[(x.intValue())][m]==null){
						 sintactico.tablero[(x.intValue())][m]=bloque;
						 System.out.println(bloque +" en ("+x+","+y+")");
                    }else{
				Errores errorLexico=new Errores();
				errorLexico.setTipo("Semantico");
				errorLexico.setLinea(bloqueleft);
				errorLexico.setColumna(bloqueright);
				errorLexico.setDescripcion("Casilla ocupada: No se puede colocar a " +bloque);
				Menu.listaLexico.add(errorLexico);
				Proyecto1_Compiladores.listaLexico.add(errorLexico);
				Menu.listaLexico=Proyecto1_Compiladores.listaLexico;}
                 }Menu.tablero=sintactico.tablero;
              CUP$sintactico$result = new java_cup.runtime.Symbol(23/*EXPR_BLOQUE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // EXPR_BLOQUE ::= ID AParentesis NUMERO Punto Punto NUMERO Coma NUMERO CParentesis PuntoComa EXPR_BLOQUE 
            {
              Object RESULT = null;
		int bloqueleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left;
		int bloqueright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).right;
		String bloque = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).right;
		Double x = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).right;
		Double y = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).value;
		int zleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left;
		int zright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).right;
		Double z = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).value;
		
				
				for(int m=(x.intValue());m<(y.intValue());m++){
					if(sintactico.tablero[m][(z.intValue())]==null){sintactico.tablero[m][(z.intValue())]=bloque;
					}else{
				Errores errorLexico=new Errores();
				errorLexico.setTipo("Semantico");
				errorLexico.setLinea(bloqueleft);
				errorLexico.setColumna(bloqueright);
				errorLexico.setDescripcion("Casilla ocupada: No se puede colocar a " +bloque);
				Menu.listaLexico.add(errorLexico);
				Proyecto1_Compiladores.listaLexico.add(errorLexico);
				Menu.listaLexico=Proyecto1_Compiladores.listaLexico;}}
				Menu.tablero=sintactico.tablero;
              CUP$sintactico$result = new java_cup.runtime.Symbol(23/*EXPR_BLOQUE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // EXPR_BLOQUE ::= ID AParentesis NUMERO Coma NUMERO CParentesis PuntoComa EXPR_BLOQUE 
            {
              Object RESULT = null;
		int bloqueleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).left;
		int bloqueright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).right;
		String bloque = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).value;
		int xleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left;
		int xright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).right;
		Double x = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).value;
		int yleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left;
		int yright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).right;
		Double y = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).value;
		
				if(sintactico.tablero[(x.intValue())][(y.intValue())]==null){sintactico.tablero[(x.intValue())][(y.intValue())]=bloque;System.out.println(bloque +" en ("+x+","+y+")");}else{
				Errores errorLexico=new Errores();
				errorLexico.setTipo("Semantico");
				errorLexico.setLinea(bloqueleft);
				errorLexico.setColumna(bloqueright);
				errorLexico.setDescripcion("Casilla ocupada: No se puede colocar a " +bloque);
				Menu.listaLexico.add(errorLexico);
				Proyecto1_Compiladores.listaLexico.add(errorLexico);
				Menu.listaLexico=Proyecto1_Compiladores.listaLexico;}
				Menu.tablero=sintactico.tablero;
				
              CUP$sintactico$result = new java_cup.runtime.Symbol(23/*EXPR_BLOQUE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // EXPR_PAREDES2 ::= AParedes2 EXPR_BLOQUE error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(18/*EXPR_PAREDES2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // EXPR_PAREDES2 ::= AParedes2 EXPR_BLOQUE CParedes2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(18/*EXPR_PAREDES2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // EXPR_VILLANOS ::= AVillanos2 EXPR_BLOQUE error 
            {
              Object RESULT = null;
		System.out.println("falta tag de cierre");
              CUP$sintactico$result = new java_cup.runtime.Symbol(22/*EXPR_VILLANOS*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // EXPR_VILLANOS ::= AVillanos2 EXPR_BLOQUE CVillanos2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(22/*EXPR_VILLANOS*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // EXPR_HEROES ::= AHeroe2 EXPR_BLOQUE error 
            {
              Object RESULT = null;
		System.out.println("falta tag de cierre");
              CUP$sintactico$result = new java_cup.runtime.Symbol(21/*EXPR_HEROES*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // EXPR_HEROES ::= AHeroe2 EXPR_BLOQUE CHeroe2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(21/*EXPR_HEROES*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // EXPR_PERSONAJES2 ::= APersonaje2 EXPR_VILLANOS EXPR_HEROES CPersonaje2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(17/*EXPR_PERSONAJES2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // EXPR_PERSONAJES2 ::= APersonaje2 EXPR_HEROES EXPR_VILLANOS CPersonaje2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(17/*EXPR_PERSONAJES2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // EXPR_AUXILIAR3 ::= EXPR_META2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(30/*EXPR_AUXILIAR3*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // EXPR_AUXILIAR3 ::= EXPR_EXTRAS2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(30/*EXPR_AUXILIAR3*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // EXPR_AUXILIAR3 ::= EXPR_PAREDES2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(30/*EXPR_AUXILIAR3*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // EXPR_AUXILIAR3 ::= EXPR_PERSONAJES2 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(30/*EXPR_AUXILIAR3*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor EXPR_AUXILIAR3 EXPR_AUXILIAR3 EXPR_AUXILIAR3 EXPR_AUXILIAR3 error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-17)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor EXPR_AUXILIAR3 EXPR_AUXILIAR3 EXPR_AUXILIAR3 error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-16)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor EXPR_AUXILIAR3 EXPR_AUXILIAR3 error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-15)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor EXPR_AUXILIAR3 error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-14)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-13)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-12)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-11)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-9)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa Ancho error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID PuntoComa error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // EXPR_ESCENARIO ::= AEscenario Background Asignacion ID error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-4)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // EXPR_ESCENARIO ::= AEscenario Background Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // EXPR_ESCENARIO ::= AEscenario Background error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // EXPR_ESCENARIO ::= AEscenario error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico2");
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // EXPR_ESCENARIO ::= Menor AEscenario Background Asignacion ID PuntoComa Ancho Asignacion NUMERO PuntoComa Alto Asignacion NUMERO Mayor EXPR_AUXILIAR3 EXPR_AUXILIAR3 EXPR_AUXILIAR3 EXPR_AUXILIAR3 CEscenario 
            {
              Object RESULT = null;
		int nombrefondoleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-14)).left;
		int nombrefondoright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-14)).right;
		String nombrefondo = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-14)).value;
		int ancholeft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).left;
		int anchoright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).right;
		Double ancho = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-10)).value;
		int altoleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).left;
		int altoright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).right;
		Double alto = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).value;
		
				Menu.imagenAUsar=nombrefondo; 
				Menu.altura=alto.intValue(); 
				Menu.anchura=ancho.intValue(); 
				auxiliar = new String[(alto.intValue())][(ancho.intValue())];
				for(int q=0;q<Menu.altura;q++){
					for(int w=0;w<Menu.anchura;w++){
						sintactico.auxiliar[w][q]=sintactico.tablero[w][q];
					}
				}

				Menu.tablero=sintactico.auxiliar;
              CUP$sintactico$result = new java_cup.runtime.Symbol(29/*EXPR_ESCENARIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-18)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // EXPR_Atributos_Designe ::= EXPR_Atributos_Designe ACorchete EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		System.out.println(" es un bloque o una meta :v");
							
							if(tipoObjeto.equals("Bloque")){tipo=4;};
							if(tipoObjeto.equals("Meta")){tipo=5;};
							if(tipoObjeto.equals("Bonus")){tipo=3;};
							Design nuevo=new Design();
							nuevo.setNombre(nombreObjeto);
							nuevo.setUrl(direccionObjeto);
							nuevo.setTipo(tipo);
							Menu.listaDesigns.add(nuevo);
							
              CUP$sintactico$result = new java_cup.runtime.Symbol(2/*EXPR_Atributos_Designe*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-6)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // EXPR_Atributos_Designe ::= EXPR_Atributos_Designe ACorchete EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
							if(tipoObjeto.equals("Bomba")){tipo=1;};
							if(tipoObjeto.equals("Arma")){tipo=2;};
							if(tipoObjeto.equals("Bonus")){tipo=3;};
							Design nuevo=new Design();
							nuevo.setNombre(nombreObjeto);
							nuevo.setUrl(direccionObjeto);
							if(tipo==1 | tipo==2){
							nuevo.setDestruir(destruccionObjeto.intValue());}else {
							nuevo.setCreditos(creditoObjeto.intValue());	
							}
							nuevo.setTipo(tipo);
							Menu.listaDesigns.add(nuevo);						
							
							System.out.println(" es una bomba o un arma o bonus :v");
              CUP$sintactico$result = new java_cup.runtime.Symbol(2/*EXPR_Atributos_Designe*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // EXPR_Atributos_Designe ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(2/*EXPR_Atributos_Designe*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // EXPR_CREDITO ::= Credito Asignacion NUMERO PuntoComa 
            {
              Object RESULT = null;
		int valleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int valright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		Double val = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		creditoObjeto=val;
              CUP$sintactico$result = new java_cup.runtime.Symbol(3/*EXPR_CREDITO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // EXPR_DESIGN ::= AElemento EXPR_Atributos_Designe CElemento 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(1/*EXPR_DESIGN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // EXPR_CONCATENAR ::= EXPR_CONCATENAR Coma 
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).value;
		descripcionObjeto+=" "+i;
              CUP$sintactico$result = new java_cup.runtime.Symbol(7/*EXPR_CONCATENAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // EXPR_CONCATENAR ::= EXPR_CONCATENAR Punto 
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).value;
		descripcionObjeto+=" "+i;
              CUP$sintactico$result = new java_cup.runtime.Symbol(7/*EXPR_CONCATENAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // EXPR_CONCATENAR ::= EXPR_CONCATENAR ID 
            {
              Object RESULT = null;
		int ileft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left;
		int iright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right;
		String i = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).value;
		descripcionObjeto+=" "+i;
              CUP$sintactico$result = new java_cup.runtime.Symbol(7/*EXPR_CONCATENAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // EXPR_CONCATENAR ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(7/*EXPR_CONCATENAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // EXPR_COMA ::= Coma 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(25/*EXPR_COMA*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // EXPR_COMA ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(25/*EXPR_COMA*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // EXPR_Atributos_Figure ::= EXPR_Atributos_Figure ACorchete EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
						Figura nueva=new Figura();
						nueva.setNombre(nombreObjeto);
						if(vidaObjeto.intValue()==0){nueva.setVida(100);}else{nueva.setVida(vidaObjeto.intValue());};
						nueva.setUrl(direccionObjeto);
						nueva.setDestruccion(destruccionObjeto.intValue());
						nueva.setDescripcion(descripcionObjeto);
						nueva.setTipo(2);
						Menu.listaFiguras.add(nueva);
						descripcionObjeto="";
						System.out.println("Un Enemigo :v");
              CUP$sintactico$result = new java_cup.runtime.Symbol(28/*EXPR_Atributos_Figure*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-7)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // EXPR_Atributos_Figure ::= EXPR_Atributos_Figure ACorchete EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
						Figura nueva=new Figura();
						nueva.setNombre(nombreObjeto);
						nueva.setVida(vidaObjeto.intValue());
						nueva.setUrl(direccionObjeto);
						nueva.setDestruccion(destruccionObjeto.intValue());
						nueva.setDescripcion(descripcionObjeto);
						nueva.setTipo(2);
						Menu.listaFiguras.add(nueva);
						descripcionObjeto="";
						System.out.println("Un Enemigo :v");
              CUP$sintactico$result = new java_cup.runtime.Symbol(28/*EXPR_Atributos_Figure*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-9)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // EXPR_Atributos_Figure ::= EXPR_Atributos_Figure ACorchete EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 EXPR_AUXILIAR2 CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
						Figura nueva=new Figura();
						nueva.setNombre(nombreObjeto);
						nueva.setVida(vidaObjeto.intValue());						
						nueva.setUrl(direccionObjeto);
						nueva.setDescripcion(descripcionObjeto);
						nueva.setTipo(1);
						Menu.listaFiguras.add(nueva);
						descripcionObjeto="";
						System.out.println("Un Herore :v");
              CUP$sintactico$result = new java_cup.runtime.Symbol(28/*EXPR_Atributos_Figure*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-8)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // EXPR_Atributos_Figure ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(28/*EXPR_Atributos_Figure*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // EXPR_AUXILIAR2 ::= EXPR_CREDITO 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // EXPR_AUXILIAR2 ::= EXPR_DESIGN 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // EXPR_AUXILIAR2 ::= EXPR_DESTRUCCION 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // EXPR_AUXILIAR2 ::= EXPR_DESCRIPCION 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // EXPR_AUXILIAR2 ::= EXPR_TIPO 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // EXPR_AUXILIAR2 ::= EXPR_IMAGEN 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // EXPR_AUXILIAR2 ::= EXPR_NOMBRE 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // EXPR_AUXILIAR2 ::= EXPR_VIDA 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(6/*EXPR_AUXILIAR2*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // EXPR_DESTRUCCION ::= Destruccion Asignacion NUMERO PuntoComa 
            {
              Object RESULT = null;
		int valorleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int valorright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		Double valor = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		destruccionObjeto=valor;
              CUP$sintactico$result = new java_cup.runtime.Symbol(24/*EXPR_DESTRUCCION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // EXPR_DESCRIPCION ::= Descripcion Asignacion Comillas EXPR_CONCATENAR Comillas PuntoComa 
            {
              Object RESULT = null;
		 System.out.println(descripcionObjeto);
              CUP$sintactico$result = new java_cup.runtime.Symbol(12/*EXPR_DESCRIPCION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // EXPR_TIPO ::= Tipo Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // EXPR_TIPO ::= Tipo error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // EXPR_TIPO ::= Tipo Asignacion Bonus PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Bonus";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // EXPR_TIPO ::= Tipo Asignacion Arma PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Arma";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // EXPR_TIPO ::= Tipo Asignacion Bomba PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Bomba";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // EXPR_TIPO ::= Tipo Asignacion Bloque PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Bloque";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // EXPR_TIPO ::= Tipo Asignacion Meta PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Meta";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // EXPR_TIPO ::= Tipo Asignacion Enemigo PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Enemigo";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // EXPR_TIPO ::= Tipo Asignacion Heroe PuntoComa 
            {
              Object RESULT = null;
		tipoObjeto="Heróe";
              CUP$sintactico$result = new java_cup.runtime.Symbol(11/*EXPR_TIPO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // EXPR_VIDA ::= Vida Asignacion NUMERO PuntoComa 
            {
              Object RESULT = null;
		int numeroleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int numeroright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		Double numero = (Double)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		vidaObjeto=numero;
              CUP$sintactico$result = new java_cup.runtime.Symbol(10/*EXPR_VIDA*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // EXPR_FIGURE ::= APersonaje EXPR_Atributos_Figure CPersonaje 
            {
              Object RESULT = null;
		System.out.println("Se han declarado con exito los datos de los personajes");
              CUP$sintactico$result = new java_cup.runtime.Symbol(27/*EXPR_FIGURE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // EXPR_BACKGROUND ::= AFondo EXPR_Atributos_Fondo CFondo 
            {
              Object RESULT = null;
		System.out.println("Se han declarado con exito los datos de(l) Atributos_Fondo(s) ");
              CUP$sintactico$result = new java_cup.runtime.Symbol(13/*EXPR_BACKGROUND*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // EXPR_Atributos_Fondo ::= EXPR_Atributos_Fondo ACorchete EXPR_IMAGEN EXPR_NOMBRE CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
						Fondo nuevo=new Fondo();
						nuevo.setNombre(nombreObjeto);
						nuevo.setUrl(direccionObjeto);
						Menu.listaFondos.add(nuevo);
						System.out.println(nombreObjeto+" direccion= " + direccionObjeto);
              CUP$sintactico$result = new java_cup.runtime.Symbol(8/*EXPR_Atributos_Fondo*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // EXPR_Atributos_Fondo ::= EXPR_Atributos_Fondo ACorchete EXPR_NOMBRE EXPR_IMAGEN CCorchete EXPR_COMA 
            {
              Object RESULT = null;
		
						Fondo nuevo=new Fondo();
						nuevo.setNombre(nombreObjeto);
						nuevo.setUrl(direccionObjeto);	
						Menu.listaFondos.add(nuevo);
						System.out.println(nombreObjeto+" direccion= " + direccionObjeto);
              CUP$sintactico$result = new java_cup.runtime.Symbol(8/*EXPR_Atributos_Fondo*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // EXPR_Atributos_Fondo ::= 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(8/*EXPR_Atributos_Fondo*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLL Comillas error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLW Comillas error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLL error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-4)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLW error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-4)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // EXPR_IMAGEN ::= Imagen Asignacion Comillas error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // EXPR_IMAGEN ::= Imagen Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // EXPR_IMAGEN ::= Imagen error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLL Comillas PuntoComa 
            {
              Object RESULT = null;
		int Urlleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left;
		int Urlright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).right;
		String Url = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).value;
		System.out.println("Nueva url " + Url);direccionObjeto=Url;
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // EXPR_IMAGEN ::= Imagen Asignacion Comillas URLW Comillas PuntoComa 
            {
              Object RESULT = null;
		int Urlleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left;
		int Urlright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).right;
		String Url = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).value;
		System.out.println("Nueva url " + Url);direccionObjeto=Url;
              CUP$sintactico$result = new java_cup.runtime.Symbol(9/*EXPR_IMAGEN*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-5)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // EXPR_NOMBRE ::= Nombre Asignacion ID error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(4/*EXPR_NOMBRE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // EXPR_NOMBRE ::= Nombre Asignacion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(4/*EXPR_NOMBRE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // EXPR_NOMBRE ::= Nombre error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(4/*EXPR_NOMBRE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // EXPR_NOMBRE ::= Nombre Asignacion ID PuntoComa 
            {
              Object RESULT = null;
		int nameleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int nameright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		String name = (String)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		System.out.println("Asignandole nombre al objeto " +nombreObjeto); nombreObjeto=name;
              CUP$sintactico$result = new java_cup.runtime.Symbol(4/*EXPR_NOMBRE*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // EXPR_AUXILIAR ::= EXPR_DESIGN 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(5/*EXPR_AUXILIAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // EXPR_AUXILIAR ::= EXPR_FIGURE 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(5/*EXPR_AUXILIAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // EXPR_AUXILIAR ::= EXPR_BACKGROUND 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(5/*EXPR_AUXILIAR*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // EXPR_CONFIGURACION ::= error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // EXPR_CONFIGURACION ::= AConfiguracion EXPR_AUXILIAR EXPR_AUXILIAR EXPR_AUXILIAR error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-4)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // EXPR_CONFIGURACION ::= AConfiguracion EXPR_AUXILIAR EXPR_AUXILIAR error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-3)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // EXPR_CONFIGURACION ::= AConfiguracion EXPR_AUXILIAR error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-2)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // EXPR_CONFIGURACION ::= AConfiguracion error 
            {
              Object RESULT = null;
		System.out.println("Error sintactico");
              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // EXPR_CONFIGURACION ::= AConfiguracion EXPR_AUXILIAR EXPR_AUXILIAR EXPR_AUXILIAR CConfiguracion 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(26/*EXPR_CONFIGURACION*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-4)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // EXPR_INICIO ::= EXPR_ESCENARIO 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(16/*EXPR_INICIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // EXPR_INICIO ::= EXPR_CONFIGURACION 
            {
              Object RESULT = null;

              CUP$sintactico$result = new java_cup.runtime.Symbol(16/*EXPR_INICIO*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          return CUP$sintactico$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= EXPR_INICIO EOF 
            {
              Object RESULT = null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).value;
		RESULT = start_val;
              CUP$sintactico$result = new java_cup.runtime.Symbol(0/*$START*/, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-1)).left, ((java_cup.runtime.Symbol)CUP$sintactico$stack.elementAt(CUP$sintactico$top-0)).right, RESULT);
            }
          /* ACCEPT */
          CUP$sintactico$parser.done_parsing();
          return CUP$sintactico$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

